// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: R/src/rexp.proto

package org.godhuli.rhipe;

public final class REXPProtos {
  private REXPProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface REXPOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .REXP.RClass rclass = 1;
    boolean hasRclass();
    org.godhuli.rhipe.REXPProtos.REXP.RClass getRclass();
    
    // repeated double realValue = 2 [packed = true];
    java.util.List<java.lang.Double> getRealValueList();
    int getRealValueCount();
    double getRealValue(int index);
    
    // repeated sint32 intValue = 3 [packed = true];
    java.util.List<java.lang.Integer> getIntValueList();
    int getIntValueCount();
    int getIntValue(int index);
    
    // repeated .REXP.RBOOLEAN booleanValue = 4;
    java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> getBooleanValueList();
    int getBooleanValueCount();
    org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN getBooleanValue(int index);
    
    // repeated .STRING stringValue = 5;
    java.util.List<org.godhuli.rhipe.REXPProtos.STRING> 
        getStringValueList();
    org.godhuli.rhipe.REXPProtos.STRING getStringValue(int index);
    int getStringValueCount();
    java.util.List<? extends org.godhuli.rhipe.REXPProtos.STRINGOrBuilder> 
        getStringValueOrBuilderList();
    org.godhuli.rhipe.REXPProtos.STRINGOrBuilder getStringValueOrBuilder(
        int index);
    
    // optional bytes rawValue = 6;
    boolean hasRawValue();
    com.google.protobuf.ByteString getRawValue();
    
    // repeated .CMPLX complexValue = 7;
    java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> 
        getComplexValueList();
    org.godhuli.rhipe.REXPProtos.CMPLX getComplexValue(int index);
    int getComplexValueCount();
    java.util.List<? extends org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder> 
        getComplexValueOrBuilderList();
    org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder getComplexValueOrBuilder(
        int index);
    
    // repeated .REXP rexpValue = 8;
    java.util.List<org.godhuli.rhipe.REXPProtos.REXP> 
        getRexpValueList();
    org.godhuli.rhipe.REXPProtos.REXP getRexpValue(int index);
    int getRexpValueCount();
    java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
        getRexpValueOrBuilderList();
    org.godhuli.rhipe.REXPProtos.REXPOrBuilder getRexpValueOrBuilder(
        int index);
    
    // repeated string attrName = 11;
    java.util.List<String> getAttrNameList();
    int getAttrNameCount();
    String getAttrName(int index);
    
    // repeated .REXP attrValue = 12;
    java.util.List<org.godhuli.rhipe.REXPProtos.REXP> 
        getAttrValueList();
    org.godhuli.rhipe.REXPProtos.REXP getAttrValue(int index);
    int getAttrValueCount();
    java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
        getAttrValueOrBuilderList();
    org.godhuli.rhipe.REXPProtos.REXPOrBuilder getAttrValueOrBuilder(
        int index);
  }
  public static final class REXP extends
      com.google.protobuf.GeneratedMessage
      implements REXPOrBuilder {
    // Use REXP.newBuilder() to construct.
    private REXP(Builder builder) {
      super(builder);
    }
    private REXP(boolean noInit) {}
    
    private static final REXP defaultInstance;
    public static REXP getDefaultInstance() {
      return defaultInstance;
    }
    
    public REXP getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_REXP_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_REXP_fieldAccessorTable;
    }
    
    public enum RClass
        implements com.google.protobuf.ProtocolMessageEnum {
      STRING(0, 0),
      RAW(1, 1),
      REAL(2, 2),
      COMPLEX(3, 3),
      INTEGER(4, 4),
      LIST(5, 5),
      LOGICAL(6, 6),
      NULLTYPE(7, 7),
      ;
      
      public static final int STRING_VALUE = 0;
      public static final int RAW_VALUE = 1;
      public static final int REAL_VALUE = 2;
      public static final int COMPLEX_VALUE = 3;
      public static final int INTEGER_VALUE = 4;
      public static final int LIST_VALUE = 5;
      public static final int LOGICAL_VALUE = 6;
      public static final int NULLTYPE_VALUE = 7;
      
      
      public final int getNumber() { return value; }
      
      public static RClass valueOf(int value) {
        switch (value) {
          case 0: return STRING;
          case 1: return RAW;
          case 2: return REAL;
          case 3: return COMPLEX;
          case 4: return INTEGER;
          case 5: return LIST;
          case 6: return LOGICAL;
          case 7: return NULLTYPE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RClass>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RClass>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RClass>() {
              public RClass findValueByNumber(int number) {
                return RClass.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final RClass[] VALUES = {
        STRING, RAW, REAL, COMPLEX, INTEGER, LIST, LOGICAL, NULLTYPE, 
      };
      
      public static RClass valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private RClass(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:REXP.RClass)
    }
    
    public enum RBOOLEAN
        implements com.google.protobuf.ProtocolMessageEnum {
      F(0, 0),
      T(1, 1),
      NA(2, 2),
      ;
      
      public static final int F_VALUE = 0;
      public static final int T_VALUE = 1;
      public static final int NA_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static RBOOLEAN valueOf(int value) {
        switch (value) {
          case 0: return F;
          case 1: return T;
          case 2: return NA;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>() {
              public RBOOLEAN findValueByNumber(int number) {
                return RBOOLEAN.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final RBOOLEAN[] VALUES = {
        F, T, NA, 
      };
      
      public static RBOOLEAN valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private RBOOLEAN(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:REXP.RBOOLEAN)
    }
    
    private int bitField0_;
    // required .REXP.RClass rclass = 1;
    public static final int RCLASS_FIELD_NUMBER = 1;
    private org.godhuli.rhipe.REXPProtos.REXP.RClass rclass_;
    public boolean hasRclass() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.godhuli.rhipe.REXPProtos.REXP.RClass getRclass() {
      return rclass_;
    }
    
    // repeated double realValue = 2 [packed = true];
    public static final int REALVALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> realValue_;
    public java.util.List<java.lang.Double>
        getRealValueList() {
      return realValue_;
    }
    public int getRealValueCount() {
      return realValue_.size();
    }
    public double getRealValue(int index) {
      return realValue_.get(index);
    }
    private int realValueMemoizedSerializedSize = -1;
    
    // repeated sint32 intValue = 3 [packed = true];
    public static final int INTVALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> intValue_;
    public java.util.List<java.lang.Integer>
        getIntValueList() {
      return intValue_;
    }
    public int getIntValueCount() {
      return intValue_.size();
    }
    public int getIntValue(int index) {
      return intValue_.get(index);
    }
    private int intValueMemoizedSerializedSize = -1;
    
    // repeated .REXP.RBOOLEAN booleanValue = 4;
    public static final int BOOLEANVALUE_FIELD_NUMBER = 4;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> booleanValue_;
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> getBooleanValueList() {
      return booleanValue_;
    }
    public int getBooleanValueCount() {
      return booleanValue_.size();
    }
    public org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN getBooleanValue(int index) {
      return booleanValue_.get(index);
    }
    
    // repeated .STRING stringValue = 5;
    public static final int STRINGVALUE_FIELD_NUMBER = 5;
    private java.util.List<org.godhuli.rhipe.REXPProtos.STRING> stringValue_;
    public java.util.List<org.godhuli.rhipe.REXPProtos.STRING> getStringValueList() {
      return stringValue_;
    }
    public java.util.List<? extends org.godhuli.rhipe.REXPProtos.STRINGOrBuilder> 
        getStringValueOrBuilderList() {
      return stringValue_;
    }
    public int getStringValueCount() {
      return stringValue_.size();
    }
    public org.godhuli.rhipe.REXPProtos.STRING getStringValue(int index) {
      return stringValue_.get(index);
    }
    public org.godhuli.rhipe.REXPProtos.STRINGOrBuilder getStringValueOrBuilder(
        int index) {
      return stringValue_.get(index);
    }
    
    // optional bytes rawValue = 6;
    public static final int RAWVALUE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString rawValue_;
    public boolean hasRawValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public com.google.protobuf.ByteString getRawValue() {
      return rawValue_;
    }
    
    // repeated .CMPLX complexValue = 7;
    public static final int COMPLEXVALUE_FIELD_NUMBER = 7;
    private java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> complexValue_;
    public java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> getComplexValueList() {
      return complexValue_;
    }
    public java.util.List<? extends org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder> 
        getComplexValueOrBuilderList() {
      return complexValue_;
    }
    public int getComplexValueCount() {
      return complexValue_.size();
    }
    public org.godhuli.rhipe.REXPProtos.CMPLX getComplexValue(int index) {
      return complexValue_.get(index);
    }
    public org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder getComplexValueOrBuilder(
        int index) {
      return complexValue_.get(index);
    }
    
    // repeated .REXP rexpValue = 8;
    public static final int REXPVALUE_FIELD_NUMBER = 8;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> rexpValue_;
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getRexpValueList() {
      return rexpValue_;
    }
    public java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
        getRexpValueOrBuilderList() {
      return rexpValue_;
    }
    public int getRexpValueCount() {
      return rexpValue_.size();
    }
    public org.godhuli.rhipe.REXPProtos.REXP getRexpValue(int index) {
      return rexpValue_.get(index);
    }
    public org.godhuli.rhipe.REXPProtos.REXPOrBuilder getRexpValueOrBuilder(
        int index) {
      return rexpValue_.get(index);
    }
    
    // repeated string attrName = 11;
    public static final int ATTRNAME_FIELD_NUMBER = 11;
    private com.google.protobuf.LazyStringList attrName_;
    public java.util.List<String>
        getAttrNameList() {
      return attrName_;
    }
    public int getAttrNameCount() {
      return attrName_.size();
    }
    public String getAttrName(int index) {
      return attrName_.get(index);
    }
    
    // repeated .REXP attrValue = 12;
    public static final int ATTRVALUE_FIELD_NUMBER = 12;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> attrValue_;
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getAttrValueList() {
      return attrValue_;
    }
    public java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
        getAttrValueOrBuilderList() {
      return attrValue_;
    }
    public int getAttrValueCount() {
      return attrValue_.size();
    }
    public org.godhuli.rhipe.REXPProtos.REXP getAttrValue(int index) {
      return attrValue_.get(index);
    }
    public org.godhuli.rhipe.REXPProtos.REXPOrBuilder getAttrValueOrBuilder(
        int index) {
      return attrValue_.get(index);
    }
    
    private void initFields() {
      rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
      realValue_ = java.util.Collections.emptyList();;
      intValue_ = java.util.Collections.emptyList();;
      booleanValue_ = java.util.Collections.emptyList();
      stringValue_ = java.util.Collections.emptyList();
      rawValue_ = com.google.protobuf.ByteString.EMPTY;
      complexValue_ = java.util.Collections.emptyList();
      rexpValue_ = java.util.Collections.emptyList();
      attrName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      attrValue_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRclass()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getComplexValueCount(); i++) {
        if (!getComplexValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getRexpValueCount(); i++) {
        if (!getRexpValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAttrValueCount(); i++) {
        if (!getAttrValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, rclass_.getNumber());
      }
      if (getRealValueList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(realValueMemoizedSerializedSize);
      }
      for (int i = 0; i < realValue_.size(); i++) {
        output.writeDoubleNoTag(realValue_.get(i));
      }
      if (getIntValueList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(intValueMemoizedSerializedSize);
      }
      for (int i = 0; i < intValue_.size(); i++) {
        output.writeSInt32NoTag(intValue_.get(i));
      }
      for (int i = 0; i < booleanValue_.size(); i++) {
        output.writeEnum(4, booleanValue_.get(i).getNumber());
      }
      for (int i = 0; i < stringValue_.size(); i++) {
        output.writeMessage(5, stringValue_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(6, rawValue_);
      }
      for (int i = 0; i < complexValue_.size(); i++) {
        output.writeMessage(7, complexValue_.get(i));
      }
      for (int i = 0; i < rexpValue_.size(); i++) {
        output.writeMessage(8, rexpValue_.get(i));
      }
      for (int i = 0; i < attrName_.size(); i++) {
        output.writeBytes(11, attrName_.getByteString(i));
      }
      for (int i = 0; i < attrValue_.size(); i++) {
        output.writeMessage(12, attrValue_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, rclass_.getNumber());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRealValueList().size();
        size += dataSize;
        if (!getRealValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        realValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(intValue_.get(i));
        }
        size += dataSize;
        if (!getIntValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < booleanValue_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(booleanValue_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * booleanValue_.size();
      }
      for (int i = 0; i < stringValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stringValue_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, rawValue_);
      }
      for (int i = 0; i < complexValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, complexValue_.get(i));
      }
      for (int i = 0; i < rexpValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, rexpValue_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < attrName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(attrName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getAttrNameList().size();
      }
      for (int i = 0; i < attrValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, attrValue_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.REXP prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.godhuli.rhipe.REXPProtos.REXPOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.internal_static_REXP_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.godhuli.rhipe.REXPProtos.internal_static_REXP_fieldAccessorTable;
      }
      
      // Construct using org.godhuli.rhipe.REXPProtos.REXP.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStringValueFieldBuilder();
          getComplexValueFieldBuilder();
          getRexpValueFieldBuilder();
          getAttrValueFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
        bitField0_ = (bitField0_ & ~0x00000001);
        realValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        intValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        booleanValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (stringValueBuilder_ == null) {
          stringValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          stringValueBuilder_.clear();
        }
        rawValue_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (complexValueBuilder_ == null) {
          complexValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          complexValueBuilder_.clear();
        }
        if (rexpValueBuilder_ == null) {
          rexpValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          rexpValueBuilder_.clear();
        }
        attrName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (attrValueBuilder_ == null) {
          attrValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          attrValueBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.REXP getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance();
      }
      
      public org.godhuli.rhipe.REXPProtos.REXP build() {
        org.godhuli.rhipe.REXPProtos.REXP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.godhuli.rhipe.REXPProtos.REXP buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.godhuli.rhipe.REXPProtos.REXP result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.godhuli.rhipe.REXPProtos.REXP buildPartial() {
        org.godhuli.rhipe.REXPProtos.REXP result = new org.godhuli.rhipe.REXPProtos.REXP(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rclass_ = rclass_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          realValue_ = java.util.Collections.unmodifiableList(realValue_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.realValue_ = realValue_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          intValue_ = java.util.Collections.unmodifiableList(intValue_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.intValue_ = intValue_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          booleanValue_ = java.util.Collections.unmodifiableList(booleanValue_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.booleanValue_ = booleanValue_;
        if (stringValueBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            stringValue_ = java.util.Collections.unmodifiableList(stringValue_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.stringValue_ = stringValue_;
        } else {
          result.stringValue_ = stringValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rawValue_ = rawValue_;
        if (complexValueBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            complexValue_ = java.util.Collections.unmodifiableList(complexValue_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.complexValue_ = complexValue_;
        } else {
          result.complexValue_ = complexValueBuilder_.build();
        }
        if (rexpValueBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            rexpValue_ = java.util.Collections.unmodifiableList(rexpValue_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.rexpValue_ = rexpValue_;
        } else {
          result.rexpValue_ = rexpValueBuilder_.build();
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          attrName_ = new com.google.protobuf.UnmodifiableLazyStringList(
              attrName_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.attrName_ = attrName_;
        if (attrValueBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            attrValue_ = java.util.Collections.unmodifiableList(attrValue_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.attrValue_ = attrValue_;
        } else {
          result.attrValue_ = attrValueBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.REXP) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.REXP)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.REXP other) {
        if (other == org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance()) return this;
        if (other.hasRclass()) {
          setRclass(other.getRclass());
        }
        if (!other.realValue_.isEmpty()) {
          if (realValue_.isEmpty()) {
            realValue_ = other.realValue_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRealValueIsMutable();
            realValue_.addAll(other.realValue_);
          }
          onChanged();
        }
        if (!other.intValue_.isEmpty()) {
          if (intValue_.isEmpty()) {
            intValue_ = other.intValue_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureIntValueIsMutable();
            intValue_.addAll(other.intValue_);
          }
          onChanged();
        }
        if (!other.booleanValue_.isEmpty()) {
          if (booleanValue_.isEmpty()) {
            booleanValue_ = other.booleanValue_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBooleanValueIsMutable();
            booleanValue_.addAll(other.booleanValue_);
          }
          onChanged();
        }
        if (stringValueBuilder_ == null) {
          if (!other.stringValue_.isEmpty()) {
            if (stringValue_.isEmpty()) {
              stringValue_ = other.stringValue_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureStringValueIsMutable();
              stringValue_.addAll(other.stringValue_);
            }
            onChanged();
          }
        } else {
          if (!other.stringValue_.isEmpty()) {
            if (stringValueBuilder_.isEmpty()) {
              stringValueBuilder_.dispose();
              stringValueBuilder_ = null;
              stringValue_ = other.stringValue_;
              bitField0_ = (bitField0_ & ~0x00000010);
              stringValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStringValueFieldBuilder() : null;
            } else {
              stringValueBuilder_.addAllMessages(other.stringValue_);
            }
          }
        }
        if (other.hasRawValue()) {
          setRawValue(other.getRawValue());
        }
        if (complexValueBuilder_ == null) {
          if (!other.complexValue_.isEmpty()) {
            if (complexValue_.isEmpty()) {
              complexValue_ = other.complexValue_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureComplexValueIsMutable();
              complexValue_.addAll(other.complexValue_);
            }
            onChanged();
          }
        } else {
          if (!other.complexValue_.isEmpty()) {
            if (complexValueBuilder_.isEmpty()) {
              complexValueBuilder_.dispose();
              complexValueBuilder_ = null;
              complexValue_ = other.complexValue_;
              bitField0_ = (bitField0_ & ~0x00000040);
              complexValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComplexValueFieldBuilder() : null;
            } else {
              complexValueBuilder_.addAllMessages(other.complexValue_);
            }
          }
        }
        if (rexpValueBuilder_ == null) {
          if (!other.rexpValue_.isEmpty()) {
            if (rexpValue_.isEmpty()) {
              rexpValue_ = other.rexpValue_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRexpValueIsMutable();
              rexpValue_.addAll(other.rexpValue_);
            }
            onChanged();
          }
        } else {
          if (!other.rexpValue_.isEmpty()) {
            if (rexpValueBuilder_.isEmpty()) {
              rexpValueBuilder_.dispose();
              rexpValueBuilder_ = null;
              rexpValue_ = other.rexpValue_;
              bitField0_ = (bitField0_ & ~0x00000080);
              rexpValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRexpValueFieldBuilder() : null;
            } else {
              rexpValueBuilder_.addAllMessages(other.rexpValue_);
            }
          }
        }
        if (!other.attrName_.isEmpty()) {
          if (attrName_.isEmpty()) {
            attrName_ = other.attrName_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureAttrNameIsMutable();
            attrName_.addAll(other.attrName_);
          }
          onChanged();
        }
        if (attrValueBuilder_ == null) {
          if (!other.attrValue_.isEmpty()) {
            if (attrValue_.isEmpty()) {
              attrValue_ = other.attrValue_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureAttrValueIsMutable();
              attrValue_.addAll(other.attrValue_);
            }
            onChanged();
          }
        } else {
          if (!other.attrValue_.isEmpty()) {
            if (attrValueBuilder_.isEmpty()) {
              attrValueBuilder_.dispose();
              attrValueBuilder_ = null;
              attrValue_ = other.attrValue_;
              bitField0_ = (bitField0_ & ~0x00000200);
              attrValueBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttrValueFieldBuilder() : null;
            } else {
              attrValueBuilder_.addAllMessages(other.attrValue_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRclass()) {
          
          return false;
        }
        for (int i = 0; i < getComplexValueCount(); i++) {
          if (!getComplexValue(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getRexpValueCount(); i++) {
          if (!getRexpValue(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAttrValueCount(); i++) {
          if (!getAttrValue(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.godhuli.rhipe.REXPProtos.REXP.RClass value = org.godhuli.rhipe.REXPProtos.REXP.RClass.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                rclass_ = value;
              }
              break;
            }
            case 17: {
              ensureRealValueIsMutable();
              realValue_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRealValue(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              ensureIntValueIsMutable();
              intValue_.add(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIntValue(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value = org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                addBooleanValue(value);
              }
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value = org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  addBooleanValue(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 42: {
              org.godhuli.rhipe.REXPProtos.STRING.Builder subBuilder = org.godhuli.rhipe.REXPProtos.STRING.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStringValue(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              rawValue_ = input.readBytes();
              break;
            }
            case 58: {
              org.godhuli.rhipe.REXPProtos.CMPLX.Builder subBuilder = org.godhuli.rhipe.REXPProtos.CMPLX.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addComplexValue(subBuilder.buildPartial());
              break;
            }
            case 66: {
              org.godhuli.rhipe.REXPProtos.REXP.Builder subBuilder = org.godhuli.rhipe.REXPProtos.REXP.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRexpValue(subBuilder.buildPartial());
              break;
            }
            case 90: {
              ensureAttrNameIsMutable();
              attrName_.add(input.readBytes());
              break;
            }
            case 98: {
              org.godhuli.rhipe.REXPProtos.REXP.Builder subBuilder = org.godhuli.rhipe.REXPProtos.REXP.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttrValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .REXP.RClass rclass = 1;
      private org.godhuli.rhipe.REXPProtos.REXP.RClass rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
      public boolean hasRclass() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.godhuli.rhipe.REXPProtos.REXP.RClass getRclass() {
        return rclass_;
      }
      public Builder setRclass(org.godhuli.rhipe.REXPProtos.REXP.RClass value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        rclass_ = value;
        onChanged();
        return this;
      }
      public Builder clearRclass() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
        onChanged();
        return this;
      }
      
      // repeated double realValue = 2 [packed = true];
      private java.util.List<java.lang.Double> realValue_ = java.util.Collections.emptyList();;
      private void ensureRealValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          realValue_ = new java.util.ArrayList<java.lang.Double>(realValue_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<java.lang.Double>
          getRealValueList() {
        return java.util.Collections.unmodifiableList(realValue_);
      }
      public int getRealValueCount() {
        return realValue_.size();
      }
      public double getRealValue(int index) {
        return realValue_.get(index);
      }
      public Builder setRealValue(
          int index, double value) {
        ensureRealValueIsMutable();
        realValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addRealValue(double value) {
        ensureRealValueIsMutable();
        realValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllRealValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRealValueIsMutable();
        super.addAll(values, realValue_);
        onChanged();
        return this;
      }
      public Builder clearRealValue() {
        realValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      
      // repeated sint32 intValue = 3 [packed = true];
      private java.util.List<java.lang.Integer> intValue_ = java.util.Collections.emptyList();;
      private void ensureIntValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          intValue_ = new java.util.ArrayList<java.lang.Integer>(intValue_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getIntValueList() {
        return java.util.Collections.unmodifiableList(intValue_);
      }
      public int getIntValueCount() {
        return intValue_.size();
      }
      public int getIntValue(int index) {
        return intValue_.get(index);
      }
      public Builder setIntValue(
          int index, int value) {
        ensureIntValueIsMutable();
        intValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addIntValue(int value) {
        ensureIntValueIsMutable();
        intValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllIntValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntValueIsMutable();
        super.addAll(values, intValue_);
        onChanged();
        return this;
      }
      public Builder clearIntValue() {
        intValue_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // repeated .REXP.RBOOLEAN booleanValue = 4;
      private java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> booleanValue_ =
        java.util.Collections.emptyList();
      private void ensureBooleanValueIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          booleanValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN>(booleanValue_);
          bitField0_ |= 0x00000008;
        }
      }
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> getBooleanValueList() {
        return java.util.Collections.unmodifiableList(booleanValue_);
      }
      public int getBooleanValueCount() {
        return booleanValue_.size();
      }
      public org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN getBooleanValue(int index) {
        return booleanValue_.get(index);
      }
      public Builder setBooleanValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBooleanValueIsMutable();
        booleanValue_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addBooleanValue(org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBooleanValueIsMutable();
        booleanValue_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllBooleanValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> values) {
        ensureBooleanValueIsMutable();
        super.addAll(values, booleanValue_);
        onChanged();
        return this;
      }
      public Builder clearBooleanValue() {
        booleanValue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      
      // repeated .STRING stringValue = 5;
      private java.util.List<org.godhuli.rhipe.REXPProtos.STRING> stringValue_ =
        java.util.Collections.emptyList();
      private void ensureStringValueIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          stringValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.STRING>(stringValue_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.STRING, org.godhuli.rhipe.REXPProtos.STRING.Builder, org.godhuli.rhipe.REXPProtos.STRINGOrBuilder> stringValueBuilder_;
      
      public java.util.List<org.godhuli.rhipe.REXPProtos.STRING> getStringValueList() {
        if (stringValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stringValue_);
        } else {
          return stringValueBuilder_.getMessageList();
        }
      }
      public int getStringValueCount() {
        if (stringValueBuilder_ == null) {
          return stringValue_.size();
        } else {
          return stringValueBuilder_.getCount();
        }
      }
      public org.godhuli.rhipe.REXPProtos.STRING getStringValue(int index) {
        if (stringValueBuilder_ == null) {
          return stringValue_.get(index);
        } else {
          return stringValueBuilder_.getMessage(index);
        }
      }
      public Builder setStringValue(
          int index, org.godhuli.rhipe.REXPProtos.STRING value) {
        if (stringValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringValueIsMutable();
          stringValue_.set(index, value);
          onChanged();
        } else {
          stringValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setStringValue(
          int index, org.godhuli.rhipe.REXPProtos.STRING.Builder builderForValue) {
        if (stringValueBuilder_ == null) {
          ensureStringValueIsMutable();
          stringValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          stringValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addStringValue(org.godhuli.rhipe.REXPProtos.STRING value) {
        if (stringValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringValueIsMutable();
          stringValue_.add(value);
          onChanged();
        } else {
          stringValueBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addStringValue(
          int index, org.godhuli.rhipe.REXPProtos.STRING value) {
        if (stringValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringValueIsMutable();
          stringValue_.add(index, value);
          onChanged();
        } else {
          stringValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addStringValue(
          org.godhuli.rhipe.REXPProtos.STRING.Builder builderForValue) {
        if (stringValueBuilder_ == null) {
          ensureStringValueIsMutable();
          stringValue_.add(builderForValue.build());
          onChanged();
        } else {
          stringValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addStringValue(
          int index, org.godhuli.rhipe.REXPProtos.STRING.Builder builderForValue) {
        if (stringValueBuilder_ == null) {
          ensureStringValueIsMutable();
          stringValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          stringValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllStringValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.STRING> values) {
        if (stringValueBuilder_ == null) {
          ensureStringValueIsMutable();
          super.addAll(values, stringValue_);
          onChanged();
        } else {
          stringValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearStringValue() {
        if (stringValueBuilder_ == null) {
          stringValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          stringValueBuilder_.clear();
        }
        return this;
      }
      public Builder removeStringValue(int index) {
        if (stringValueBuilder_ == null) {
          ensureStringValueIsMutable();
          stringValue_.remove(index);
          onChanged();
        } else {
          stringValueBuilder_.remove(index);
        }
        return this;
      }
      public org.godhuli.rhipe.REXPProtos.STRING.Builder getStringValueBuilder(
          int index) {
        return getStringValueFieldBuilder().getBuilder(index);
      }
      public org.godhuli.rhipe.REXPProtos.STRINGOrBuilder getStringValueOrBuilder(
          int index) {
        if (stringValueBuilder_ == null) {
          return stringValue_.get(index);  } else {
          return stringValueBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.godhuli.rhipe.REXPProtos.STRINGOrBuilder> 
           getStringValueOrBuilderList() {
        if (stringValueBuilder_ != null) {
          return stringValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stringValue_);
        }
      }
      public org.godhuli.rhipe.REXPProtos.STRING.Builder addStringValueBuilder() {
        return getStringValueFieldBuilder().addBuilder(
            org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance());
      }
      public org.godhuli.rhipe.REXPProtos.STRING.Builder addStringValueBuilder(
          int index) {
        return getStringValueFieldBuilder().addBuilder(
            index, org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance());
      }
      public java.util.List<org.godhuli.rhipe.REXPProtos.STRING.Builder> 
           getStringValueBuilderList() {
        return getStringValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.STRING, org.godhuli.rhipe.REXPProtos.STRING.Builder, org.godhuli.rhipe.REXPProtos.STRINGOrBuilder> 
          getStringValueFieldBuilder() {
        if (stringValueBuilder_ == null) {
          stringValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.godhuli.rhipe.REXPProtos.STRING, org.godhuli.rhipe.REXPProtos.STRING.Builder, org.godhuli.rhipe.REXPProtos.STRINGOrBuilder>(
                  stringValue_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          stringValue_ = null;
        }
        return stringValueBuilder_;
      }
      
      // optional bytes rawValue = 6;
      private com.google.protobuf.ByteString rawValue_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasRawValue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public com.google.protobuf.ByteString getRawValue() {
        return rawValue_;
      }
      public Builder setRawValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        rawValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearRawValue() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rawValue_ = getDefaultInstance().getRawValue();
        onChanged();
        return this;
      }
      
      // repeated .CMPLX complexValue = 7;
      private java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> complexValue_ =
        java.util.Collections.emptyList();
      private void ensureComplexValueIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          complexValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.CMPLX>(complexValue_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.CMPLX, org.godhuli.rhipe.REXPProtos.CMPLX.Builder, org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder> complexValueBuilder_;
      
      public java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> getComplexValueList() {
        if (complexValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(complexValue_);
        } else {
          return complexValueBuilder_.getMessageList();
        }
      }
      public int getComplexValueCount() {
        if (complexValueBuilder_ == null) {
          return complexValue_.size();
        } else {
          return complexValueBuilder_.getCount();
        }
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX getComplexValue(int index) {
        if (complexValueBuilder_ == null) {
          return complexValue_.get(index);
        } else {
          return complexValueBuilder_.getMessage(index);
        }
      }
      public Builder setComplexValue(
          int index, org.godhuli.rhipe.REXPProtos.CMPLX value) {
        if (complexValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexValueIsMutable();
          complexValue_.set(index, value);
          onChanged();
        } else {
          complexValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setComplexValue(
          int index, org.godhuli.rhipe.REXPProtos.CMPLX.Builder builderForValue) {
        if (complexValueBuilder_ == null) {
          ensureComplexValueIsMutable();
          complexValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          complexValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addComplexValue(org.godhuli.rhipe.REXPProtos.CMPLX value) {
        if (complexValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexValueIsMutable();
          complexValue_.add(value);
          onChanged();
        } else {
          complexValueBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addComplexValue(
          int index, org.godhuli.rhipe.REXPProtos.CMPLX value) {
        if (complexValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComplexValueIsMutable();
          complexValue_.add(index, value);
          onChanged();
        } else {
          complexValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addComplexValue(
          org.godhuli.rhipe.REXPProtos.CMPLX.Builder builderForValue) {
        if (complexValueBuilder_ == null) {
          ensureComplexValueIsMutable();
          complexValue_.add(builderForValue.build());
          onChanged();
        } else {
          complexValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addComplexValue(
          int index, org.godhuli.rhipe.REXPProtos.CMPLX.Builder builderForValue) {
        if (complexValueBuilder_ == null) {
          ensureComplexValueIsMutable();
          complexValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          complexValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllComplexValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.CMPLX> values) {
        if (complexValueBuilder_ == null) {
          ensureComplexValueIsMutable();
          super.addAll(values, complexValue_);
          onChanged();
        } else {
          complexValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearComplexValue() {
        if (complexValueBuilder_ == null) {
          complexValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          complexValueBuilder_.clear();
        }
        return this;
      }
      public Builder removeComplexValue(int index) {
        if (complexValueBuilder_ == null) {
          ensureComplexValueIsMutable();
          complexValue_.remove(index);
          onChanged();
        } else {
          complexValueBuilder_.remove(index);
        }
        return this;
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX.Builder getComplexValueBuilder(
          int index) {
        return getComplexValueFieldBuilder().getBuilder(index);
      }
      public org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder getComplexValueOrBuilder(
          int index) {
        if (complexValueBuilder_ == null) {
          return complexValue_.get(index);  } else {
          return complexValueBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder> 
           getComplexValueOrBuilderList() {
        if (complexValueBuilder_ != null) {
          return complexValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(complexValue_);
        }
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX.Builder addComplexValueBuilder() {
        return getComplexValueFieldBuilder().addBuilder(
            org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance());
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX.Builder addComplexValueBuilder(
          int index) {
        return getComplexValueFieldBuilder().addBuilder(
            index, org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance());
      }
      public java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX.Builder> 
           getComplexValueBuilderList() {
        return getComplexValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.CMPLX, org.godhuli.rhipe.REXPProtos.CMPLX.Builder, org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder> 
          getComplexValueFieldBuilder() {
        if (complexValueBuilder_ == null) {
          complexValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.godhuli.rhipe.REXPProtos.CMPLX, org.godhuli.rhipe.REXPProtos.CMPLX.Builder, org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder>(
                  complexValue_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          complexValue_ = null;
        }
        return complexValueBuilder_;
      }
      
      // repeated .REXP rexpValue = 8;
      private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> rexpValue_ =
        java.util.Collections.emptyList();
      private void ensureRexpValueIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          rexpValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>(rexpValue_);
          bitField0_ |= 0x00000080;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder> rexpValueBuilder_;
      
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getRexpValueList() {
        if (rexpValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rexpValue_);
        } else {
          return rexpValueBuilder_.getMessageList();
        }
      }
      public int getRexpValueCount() {
        if (rexpValueBuilder_ == null) {
          return rexpValue_.size();
        } else {
          return rexpValueBuilder_.getCount();
        }
      }
      public org.godhuli.rhipe.REXPProtos.REXP getRexpValue(int index) {
        if (rexpValueBuilder_ == null) {
          return rexpValue_.get(index);
        } else {
          return rexpValueBuilder_.getMessage(index);
        }
      }
      public Builder setRexpValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (rexpValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRexpValueIsMutable();
          rexpValue_.set(index, value);
          onChanged();
        } else {
          rexpValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setRexpValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (rexpValueBuilder_ == null) {
          ensureRexpValueIsMutable();
          rexpValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          rexpValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addRexpValue(org.godhuli.rhipe.REXPProtos.REXP value) {
        if (rexpValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRexpValueIsMutable();
          rexpValue_.add(value);
          onChanged();
        } else {
          rexpValueBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addRexpValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (rexpValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRexpValueIsMutable();
          rexpValue_.add(index, value);
          onChanged();
        } else {
          rexpValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addRexpValue(
          org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (rexpValueBuilder_ == null) {
          ensureRexpValueIsMutable();
          rexpValue_.add(builderForValue.build());
          onChanged();
        } else {
          rexpValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addRexpValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (rexpValueBuilder_ == null) {
          ensureRexpValueIsMutable();
          rexpValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          rexpValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllRexpValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP> values) {
        if (rexpValueBuilder_ == null) {
          ensureRexpValueIsMutable();
          super.addAll(values, rexpValue_);
          onChanged();
        } else {
          rexpValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearRexpValue() {
        if (rexpValueBuilder_ == null) {
          rexpValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          rexpValueBuilder_.clear();
        }
        return this;
      }
      public Builder removeRexpValue(int index) {
        if (rexpValueBuilder_ == null) {
          ensureRexpValueIsMutable();
          rexpValue_.remove(index);
          onChanged();
        } else {
          rexpValueBuilder_.remove(index);
        }
        return this;
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder getRexpValueBuilder(
          int index) {
        return getRexpValueFieldBuilder().getBuilder(index);
      }
      public org.godhuli.rhipe.REXPProtos.REXPOrBuilder getRexpValueOrBuilder(
          int index) {
        if (rexpValueBuilder_ == null) {
          return rexpValue_.get(index);  } else {
          return rexpValueBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
           getRexpValueOrBuilderList() {
        if (rexpValueBuilder_ != null) {
          return rexpValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rexpValue_);
        }
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder addRexpValueBuilder() {
        return getRexpValueFieldBuilder().addBuilder(
            org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance());
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder addRexpValueBuilder(
          int index) {
        return getRexpValueFieldBuilder().addBuilder(
            index, org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance());
      }
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.Builder> 
           getRexpValueBuilderList() {
        return getRexpValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
          getRexpValueFieldBuilder() {
        if (rexpValueBuilder_ == null) {
          rexpValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder>(
                  rexpValue_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          rexpValue_ = null;
        }
        return rexpValueBuilder_;
      }
      
      // repeated string attrName = 11;
      private com.google.protobuf.LazyStringList attrName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureAttrNameIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          attrName_ = new com.google.protobuf.LazyStringArrayList(attrName_);
          bitField0_ |= 0x00000100;
         }
      }
      public java.util.List<String>
          getAttrNameList() {
        return java.util.Collections.unmodifiableList(attrName_);
      }
      public int getAttrNameCount() {
        return attrName_.size();
      }
      public String getAttrName(int index) {
        return attrName_.get(index);
      }
      public Builder setAttrName(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttrNameIsMutable();
        attrName_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addAttrName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureAttrNameIsMutable();
        attrName_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllAttrName(
          java.lang.Iterable<String> values) {
        ensureAttrNameIsMutable();
        super.addAll(values, attrName_);
        onChanged();
        return this;
      }
      public Builder clearAttrName() {
        attrName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      void addAttrName(com.google.protobuf.ByteString value) {
        ensureAttrNameIsMutable();
        attrName_.add(value);
        onChanged();
      }
      
      // repeated .REXP attrValue = 12;
      private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> attrValue_ =
        java.util.Collections.emptyList();
      private void ensureAttrValueIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          attrValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>(attrValue_);
          bitField0_ |= 0x00000200;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder> attrValueBuilder_;
      
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getAttrValueList() {
        if (attrValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attrValue_);
        } else {
          return attrValueBuilder_.getMessageList();
        }
      }
      public int getAttrValueCount() {
        if (attrValueBuilder_ == null) {
          return attrValue_.size();
        } else {
          return attrValueBuilder_.getCount();
        }
      }
      public org.godhuli.rhipe.REXPProtos.REXP getAttrValue(int index) {
        if (attrValueBuilder_ == null) {
          return attrValue_.get(index);
        } else {
          return attrValueBuilder_.getMessage(index);
        }
      }
      public Builder setAttrValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (attrValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrValueIsMutable();
          attrValue_.set(index, value);
          onChanged();
        } else {
          attrValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setAttrValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (attrValueBuilder_ == null) {
          ensureAttrValueIsMutable();
          attrValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          attrValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAttrValue(org.godhuli.rhipe.REXPProtos.REXP value) {
        if (attrValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrValueIsMutable();
          attrValue_.add(value);
          onChanged();
        } else {
          attrValueBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addAttrValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (attrValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttrValueIsMutable();
          attrValue_.add(index, value);
          onChanged();
        } else {
          attrValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addAttrValue(
          org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (attrValueBuilder_ == null) {
          ensureAttrValueIsMutable();
          attrValue_.add(builderForValue.build());
          onChanged();
        } else {
          attrValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addAttrValue(
          int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (attrValueBuilder_ == null) {
          ensureAttrValueIsMutable();
          attrValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          attrValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllAttrValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP> values) {
        if (attrValueBuilder_ == null) {
          ensureAttrValueIsMutable();
          super.addAll(values, attrValue_);
          onChanged();
        } else {
          attrValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearAttrValue() {
        if (attrValueBuilder_ == null) {
          attrValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          attrValueBuilder_.clear();
        }
        return this;
      }
      public Builder removeAttrValue(int index) {
        if (attrValueBuilder_ == null) {
          ensureAttrValueIsMutable();
          attrValue_.remove(index);
          onChanged();
        } else {
          attrValueBuilder_.remove(index);
        }
        return this;
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder getAttrValueBuilder(
          int index) {
        return getAttrValueFieldBuilder().getBuilder(index);
      }
      public org.godhuli.rhipe.REXPProtos.REXPOrBuilder getAttrValueOrBuilder(
          int index) {
        if (attrValueBuilder_ == null) {
          return attrValue_.get(index);  } else {
          return attrValueBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
           getAttrValueOrBuilderList() {
        if (attrValueBuilder_ != null) {
          return attrValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attrValue_);
        }
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder addAttrValueBuilder() {
        return getAttrValueFieldBuilder().addBuilder(
            org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance());
      }
      public org.godhuli.rhipe.REXPProtos.REXP.Builder addAttrValueBuilder(
          int index) {
        return getAttrValueFieldBuilder().addBuilder(
            index, org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance());
      }
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.Builder> 
           getAttrValueBuilderList() {
        return getAttrValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder> 
          getAttrValueFieldBuilder() {
        if (attrValueBuilder_ == null) {
          attrValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.godhuli.rhipe.REXPProtos.REXP, org.godhuli.rhipe.REXPProtos.REXP.Builder, org.godhuli.rhipe.REXPProtos.REXPOrBuilder>(
                  attrValue_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          attrValue_ = null;
        }
        return attrValueBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:REXP)
    }
    
    static {
      defaultInstance = new REXP(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:REXP)
  }
  
  public interface STRINGOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string strval = 1;
    boolean hasStrval();
    String getStrval();
    
    // optional bool isNA = 2 [default = false];
    boolean hasIsNA();
    boolean getIsNA();
  }
  public static final class STRING extends
      com.google.protobuf.GeneratedMessage
      implements STRINGOrBuilder {
    // Use STRING.newBuilder() to construct.
    private STRING(Builder builder) {
      super(builder);
    }
    private STRING(boolean noInit) {}
    
    private static final STRING defaultInstance;
    public static STRING getDefaultInstance() {
      return defaultInstance;
    }
    
    public STRING getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_STRING_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_STRING_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string strval = 1;
    public static final int STRVAL_FIELD_NUMBER = 1;
    private java.lang.Object strval_;
    public boolean hasStrval() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getStrval() {
      java.lang.Object ref = strval_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          strval_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStrvalBytes() {
      java.lang.Object ref = strval_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        strval_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool isNA = 2 [default = false];
    public static final int ISNA_FIELD_NUMBER = 2;
    private boolean isNA_;
    public boolean hasIsNA() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getIsNA() {
      return isNA_;
    }
    
    private void initFields() {
      strval_ = "";
      isNA_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStrvalBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, isNA_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStrvalBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, isNA_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.STRING prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.godhuli.rhipe.REXPProtos.STRINGOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.internal_static_STRING_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.godhuli.rhipe.REXPProtos.internal_static_STRING_fieldAccessorTable;
      }
      
      // Construct using org.godhuli.rhipe.REXPProtos.STRING.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        strval_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isNA_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.STRING.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.STRING getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance();
      }
      
      public org.godhuli.rhipe.REXPProtos.STRING build() {
        org.godhuli.rhipe.REXPProtos.STRING result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.godhuli.rhipe.REXPProtos.STRING buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.godhuli.rhipe.REXPProtos.STRING result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.godhuli.rhipe.REXPProtos.STRING buildPartial() {
        org.godhuli.rhipe.REXPProtos.STRING result = new org.godhuli.rhipe.REXPProtos.STRING(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.strval_ = strval_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isNA_ = isNA_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.STRING) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.STRING)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.STRING other) {
        if (other == org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance()) return this;
        if (other.hasStrval()) {
          setStrval(other.getStrval());
        }
        if (other.hasIsNA()) {
          setIsNA(other.getIsNA());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              strval_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isNA_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string strval = 1;
      private java.lang.Object strval_ = "";
      public boolean hasStrval() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getStrval() {
        java.lang.Object ref = strval_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          strval_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStrval(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        strval_ = value;
        onChanged();
        return this;
      }
      public Builder clearStrval() {
        bitField0_ = (bitField0_ & ~0x00000001);
        strval_ = getDefaultInstance().getStrval();
        onChanged();
        return this;
      }
      void setStrval(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        strval_ = value;
        onChanged();
      }
      
      // optional bool isNA = 2 [default = false];
      private boolean isNA_ ;
      public boolean hasIsNA() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getIsNA() {
        return isNA_;
      }
      public Builder setIsNA(boolean value) {
        bitField0_ |= 0x00000002;
        isNA_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsNA() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isNA_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:STRING)
    }
    
    static {
      defaultInstance = new STRING(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:STRING)
  }
  
  public interface CMPLXOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double real = 1 [default = 0];
    boolean hasReal();
    double getReal();
    
    // required double imag = 2;
    boolean hasImag();
    double getImag();
  }
  public static final class CMPLX extends
      com.google.protobuf.GeneratedMessage
      implements CMPLXOrBuilder {
    // Use CMPLX.newBuilder() to construct.
    private CMPLX(Builder builder) {
      super(builder);
    }
    private CMPLX(boolean noInit) {}
    
    private static final CMPLX defaultInstance;
    public static CMPLX getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMPLX getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double real = 1 [default = 0];
    public static final int REAL_FIELD_NUMBER = 1;
    private double real_;
    public boolean hasReal() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getReal() {
      return real_;
    }
    
    // required double imag = 2;
    public static final int IMAG_FIELD_NUMBER = 2;
    private double imag_;
    public boolean hasImag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getImag() {
      return imag_;
    }
    
    private void initFields() {
      real_ = 0D;
      imag_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasImag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, real_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, imag_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, real_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, imag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.CMPLX prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements org.godhuli.rhipe.REXPProtos.CMPLXOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_fieldAccessorTable;
      }
      
      // Construct using org.godhuli.rhipe.REXPProtos.CMPLX.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        real_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        imag_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.CMPLX.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.CMPLX getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance();
      }
      
      public org.godhuli.rhipe.REXPProtos.CMPLX build() {
        org.godhuli.rhipe.REXPProtos.CMPLX result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.godhuli.rhipe.REXPProtos.CMPLX buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.godhuli.rhipe.REXPProtos.CMPLX result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.godhuli.rhipe.REXPProtos.CMPLX buildPartial() {
        org.godhuli.rhipe.REXPProtos.CMPLX result = new org.godhuli.rhipe.REXPProtos.CMPLX(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.real_ = real_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.imag_ = imag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.CMPLX) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.CMPLX)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.CMPLX other) {
        if (other == org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance()) return this;
        if (other.hasReal()) {
          setReal(other.getReal());
        }
        if (other.hasImag()) {
          setImag(other.getImag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasImag()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              real_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              imag_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double real = 1 [default = 0];
      private double real_ ;
      public boolean hasReal() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getReal() {
        return real_;
      }
      public Builder setReal(double value) {
        bitField0_ |= 0x00000001;
        real_ = value;
        onChanged();
        return this;
      }
      public Builder clearReal() {
        bitField0_ = (bitField0_ & ~0x00000001);
        real_ = 0D;
        onChanged();
        return this;
      }
      
      // required double imag = 2;
      private double imag_ ;
      public boolean hasImag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getImag() {
        return imag_;
      }
      public Builder setImag(double value) {
        bitField0_ |= 0x00000002;
        imag_ = value;
        onChanged();
        return this;
      }
      public Builder clearImag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        imag_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMPLX)
    }
    
    static {
      defaultInstance = new CMPLX(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMPLX)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_REXP_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_REXP_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_STRING_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_STRING_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMPLX_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMPLX_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020R/src/rexp.proto\"\225\003\n\004REXP\022\034\n\006rclass\030\001 " +
      "\002(\0162\014.REXP.RClass\022\025\n\trealValue\030\002 \003(\001B\002\020\001" +
      "\022\024\n\010intValue\030\003 \003(\021B\002\020\001\022$\n\014booleanValue\030\004" +
      " \003(\0162\016.REXP.RBOOLEAN\022\034\n\013stringValue\030\005 \003(" +
      "\0132\007.STRING\022\020\n\010rawValue\030\006 \001(\014\022\034\n\014complexV" +
      "alue\030\007 \003(\0132\006.CMPLX\022\030\n\trexpValue\030\010 \003(\0132\005." +
      "REXP\022\020\n\010attrName\030\013 \003(\t\022\030\n\tattrValue\030\014 \003(" +
      "\0132\005.REXP\"f\n\006RClass\022\n\n\006STRING\020\000\022\007\n\003RAW\020\001\022" +
      "\010\n\004REAL\020\002\022\013\n\007COMPLEX\020\003\022\013\n\007INTEGER\020\004\022\010\n\004L" +
      "IST\020\005\022\013\n\007LOGICAL\020\006\022\014\n\010NULLTYPE\020\007\" \n\010RBOO",
      "LEAN\022\005\n\001F\020\000\022\005\n\001T\020\001\022\006\n\002NA\020\002\"-\n\006STRING\022\016\n\006" +
      "strval\030\001 \001(\t\022\023\n\004isNA\030\002 \001(\010:\005false\"&\n\005CMP" +
      "LX\022\017\n\004real\030\001 \001(\001:\0010\022\014\n\004imag\030\002 \002(\001B\037\n\021org" +
      ".godhuli.rhipeB\nREXPProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_REXP_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_REXP_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_REXP_descriptor,
              new java.lang.String[] { "Rclass", "RealValue", "IntValue", "BooleanValue", "StringValue", "RawValue", "ComplexValue", "RexpValue", "AttrName", "AttrValue", },
              org.godhuli.rhipe.REXPProtos.REXP.class,
              org.godhuli.rhipe.REXPProtos.REXP.Builder.class);
          internal_static_STRING_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_STRING_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_STRING_descriptor,
              new java.lang.String[] { "Strval", "IsNA", },
              org.godhuli.rhipe.REXPProtos.STRING.class,
              org.godhuli.rhipe.REXPProtos.STRING.Builder.class);
          internal_static_CMPLX_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CMPLX_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMPLX_descriptor,
              new java.lang.String[] { "Real", "Imag", },
              org.godhuli.rhipe.REXPProtos.CMPLX.class,
              org.godhuli.rhipe.REXPProtos.CMPLX.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
