// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rexp.proto

package org.godhuli.rhipe;

public final class REXPProtos {
  private REXPProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class REXP extends
      com.google.protobuf.GeneratedMessage {
    // Use REXP.newBuilder() to construct.
    private REXP() {
      initFields();
    }
    private REXP(boolean noInit) {}
    
    private static final REXP defaultInstance;
    public static REXP getDefaultInstance() {
      return defaultInstance;
    }
    
    public REXP getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_REXP_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_REXP_fieldAccessorTable;
    }
    
    public enum RClass
        implements com.google.protobuf.ProtocolMessageEnum {
      STRING(0, 0),
      RAW(1, 1),
      REAL(2, 2),
      COMPLEX(3, 3),
      INTEGER(4, 4),
      LIST(5, 5),
      LOGICAL(6, 6),
      NULLTYPE(7, 7),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static RClass valueOf(int value) {
        switch (value) {
          case 0: return STRING;
          case 1: return RAW;
          case 2: return REAL;
          case 3: return COMPLEX;
          case 4: return INTEGER;
          case 5: return LIST;
          case 6: return LOGICAL;
          case 7: return NULLTYPE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RClass>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RClass>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RClass>() {
              public RClass findValueByNumber(int number) {
                return RClass.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final RClass[] VALUES = {
        STRING, RAW, REAL, COMPLEX, INTEGER, LIST, LOGICAL, NULLTYPE, 
      };
      public static RClass valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private RClass(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        org.godhuli.rhipe.REXPProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:REXP.RClass)
    }
    
    public enum RBOOLEAN
        implements com.google.protobuf.ProtocolMessageEnum {
      F(0, 0),
      T(1, 1),
      NA(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static RBOOLEAN valueOf(int value) {
        switch (value) {
          case 0: return F;
          case 1: return T;
          case 2: return NA;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RBOOLEAN>() {
              public RBOOLEAN findValueByNumber(int number) {
                return RBOOLEAN.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor().getEnumTypes().get(1);
      }
      
      private static final RBOOLEAN[] VALUES = {
        F, T, NA, 
      };
      public static RBOOLEAN valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private RBOOLEAN(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        org.godhuli.rhipe.REXPProtos.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:REXP.RBOOLEAN)
    }
    
    // required .REXP.RClass rclass = 1;
    public static final int RCLASS_FIELD_NUMBER = 1;
    private boolean hasRclass;
    private org.godhuli.rhipe.REXPProtos.REXP.RClass rclass_;
    public boolean hasRclass() { return hasRclass; }
    public org.godhuli.rhipe.REXPProtos.REXP.RClass getRclass() { return rclass_; }
    
    // repeated double realValue = 2 [packed = true];
    public static final int REALVALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> realValue_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getRealValueList() {
      return realValue_;
    }
    public int getRealValueCount() { return realValue_.size(); }
    public double getRealValue(int index) {
      return realValue_.get(index);
    }
    private int realValueMemoizedSerializedSize = -1;
    
    // repeated sint32 intValue = 3 [packed = true];
    public static final int INTVALUE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> intValue_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getIntValueList() {
      return intValue_;
    }
    public int getIntValueCount() { return intValue_.size(); }
    public int getIntValue(int index) {
      return intValue_.get(index);
    }
    private int intValueMemoizedSerializedSize = -1;
    
    // repeated .REXP.RBOOLEAN booleanValue = 4;
    public static final int BOOLEANVALUE_FIELD_NUMBER = 4;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> booleanValue_ =
      java.util.Collections.emptyList();
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> getBooleanValueList() {
      return booleanValue_;
    }
    public int getBooleanValueCount() { return booleanValue_.size(); }
    public org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN getBooleanValue(int index) {
      return booleanValue_.get(index);
    }
    
    // repeated .STRING stringValue = 5;
    public static final int STRINGVALUE_FIELD_NUMBER = 5;
    private java.util.List<org.godhuli.rhipe.REXPProtos.STRING> stringValue_ =
      java.util.Collections.emptyList();
    public java.util.List<org.godhuli.rhipe.REXPProtos.STRING> getStringValueList() {
      return stringValue_;
    }
    public int getStringValueCount() { return stringValue_.size(); }
    public org.godhuli.rhipe.REXPProtos.STRING getStringValue(int index) {
      return stringValue_.get(index);
    }
    
    // optional bytes rawValue = 6;
    public static final int RAWVALUE_FIELD_NUMBER = 6;
    private boolean hasRawValue;
    private com.google.protobuf.ByteString rawValue_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasRawValue() { return hasRawValue; }
    public com.google.protobuf.ByteString getRawValue() { return rawValue_; }
    
    // repeated .CMPLX complexValue = 7;
    public static final int COMPLEXVALUE_FIELD_NUMBER = 7;
    private java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> complexValue_ =
      java.util.Collections.emptyList();
    public java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> getComplexValueList() {
      return complexValue_;
    }
    public int getComplexValueCount() { return complexValue_.size(); }
    public org.godhuli.rhipe.REXPProtos.CMPLX getComplexValue(int index) {
      return complexValue_.get(index);
    }
    
    // repeated .REXP rexpValue = 8;
    public static final int REXPVALUE_FIELD_NUMBER = 8;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> rexpValue_ =
      java.util.Collections.emptyList();
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getRexpValueList() {
      return rexpValue_;
    }
    public int getRexpValueCount() { return rexpValue_.size(); }
    public org.godhuli.rhipe.REXPProtos.REXP getRexpValue(int index) {
      return rexpValue_.get(index);
    }
    
    // repeated string attrName = 11;
    public static final int ATTRNAME_FIELD_NUMBER = 11;
    private java.util.List<java.lang.String> attrName_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getAttrNameList() {
      return attrName_;
    }
    public int getAttrNameCount() { return attrName_.size(); }
    public java.lang.String getAttrName(int index) {
      return attrName_.get(index);
    }
    
    // repeated .REXP attrValue = 12;
    public static final int ATTRVALUE_FIELD_NUMBER = 12;
    private java.util.List<org.godhuli.rhipe.REXPProtos.REXP> attrValue_ =
      java.util.Collections.emptyList();
    public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getAttrValueList() {
      return attrValue_;
    }
    public int getAttrValueCount() { return attrValue_.size(); }
    public org.godhuli.rhipe.REXPProtos.REXP getAttrValue(int index) {
      return attrValue_.get(index);
    }
    
    private void initFields() {
      rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
    }
    public final boolean isInitialized() {
      if (!hasRclass) return false;
      for (org.godhuli.rhipe.REXPProtos.CMPLX element : getComplexValueList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getRexpValueList()) {
        if (!element.isInitialized()) return false;
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getAttrValueList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRclass()) {
        output.writeEnum(1, getRclass().getNumber());
      }
      if (getRealValueList().size() > 0) {
        output.writeRawVarint32(18);
        output.writeRawVarint32(realValueMemoizedSerializedSize);
      }
      for (double element : getRealValueList()) {
        output.writeDoubleNoTag(element);
      }
      if (getIntValueList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(intValueMemoizedSerializedSize);
      }
      for (int element : getIntValueList()) {
        output.writeSInt32NoTag(element);
      }
      for (org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN element : getBooleanValueList()) {
        output.writeEnum(4, element.getNumber());
      }
      for (org.godhuli.rhipe.REXPProtos.STRING element : getStringValueList()) {
        output.writeMessage(5, element);
      }
      if (hasRawValue()) {
        output.writeBytes(6, getRawValue());
      }
      for (org.godhuli.rhipe.REXPProtos.CMPLX element : getComplexValueList()) {
        output.writeMessage(7, element);
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getRexpValueList()) {
        output.writeMessage(8, element);
      }
      for (java.lang.String element : getAttrNameList()) {
        output.writeString(11, element);
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getAttrValueList()) {
        output.writeMessage(12, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRclass()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getRclass().getNumber());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRealValueList().size();
        size += dataSize;
        if (!getRealValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        realValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int element : getIntValueList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeSInt32SizeNoTag(element);
        }
        size += dataSize;
        if (!getIntValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        intValueMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN element : getBooleanValueList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(element.getNumber());
        }
        size += dataSize;
        size += 1 * getBooleanValueList().size();
      }
      for (org.godhuli.rhipe.REXPProtos.STRING element : getStringValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      if (hasRawValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getRawValue());
      }
      for (org.godhuli.rhipe.REXPProtos.CMPLX element : getComplexValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getRexpValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, element);
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getAttrNameList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getAttrNameList().size();
      }
      for (org.godhuli.rhipe.REXPProtos.REXP element : getAttrValueList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.REXP parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.REXP prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.godhuli.rhipe.REXPProtos.REXP result;
      
      // Construct using org.godhuli.rhipe.REXPProtos.REXP.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.godhuli.rhipe.REXPProtos.REXP();
        return builder;
      }
      
      protected org.godhuli.rhipe.REXPProtos.REXP internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.godhuli.rhipe.REXPProtos.REXP();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.REXP getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.godhuli.rhipe.REXPProtos.REXP build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.godhuli.rhipe.REXPProtos.REXP buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.godhuli.rhipe.REXPProtos.REXP buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.realValue_ != java.util.Collections.EMPTY_LIST) {
          result.realValue_ =
            java.util.Collections.unmodifiableList(result.realValue_);
        }
        if (result.intValue_ != java.util.Collections.EMPTY_LIST) {
          result.intValue_ =
            java.util.Collections.unmodifiableList(result.intValue_);
        }
        if (result.booleanValue_ != java.util.Collections.EMPTY_LIST) {
          result.booleanValue_ =
            java.util.Collections.unmodifiableList(result.booleanValue_);
        }
        if (result.stringValue_ != java.util.Collections.EMPTY_LIST) {
          result.stringValue_ =
            java.util.Collections.unmodifiableList(result.stringValue_);
        }
        if (result.complexValue_ != java.util.Collections.EMPTY_LIST) {
          result.complexValue_ =
            java.util.Collections.unmodifiableList(result.complexValue_);
        }
        if (result.rexpValue_ != java.util.Collections.EMPTY_LIST) {
          result.rexpValue_ =
            java.util.Collections.unmodifiableList(result.rexpValue_);
        }
        if (result.attrName_ != java.util.Collections.EMPTY_LIST) {
          result.attrName_ =
            java.util.Collections.unmodifiableList(result.attrName_);
        }
        if (result.attrValue_ != java.util.Collections.EMPTY_LIST) {
          result.attrValue_ =
            java.util.Collections.unmodifiableList(result.attrValue_);
        }
        org.godhuli.rhipe.REXPProtos.REXP returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.REXP) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.REXP)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.REXP other) {
        if (other == org.godhuli.rhipe.REXPProtos.REXP.getDefaultInstance()) return this;
        if (other.hasRclass()) {
          setRclass(other.getRclass());
        }
        if (!other.realValue_.isEmpty()) {
          if (result.realValue_.isEmpty()) {
            result.realValue_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.realValue_.addAll(other.realValue_);
        }
        if (!other.intValue_.isEmpty()) {
          if (result.intValue_.isEmpty()) {
            result.intValue_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.intValue_.addAll(other.intValue_);
        }
        if (!other.booleanValue_.isEmpty()) {
          if (result.booleanValue_.isEmpty()) {
            result.booleanValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN>();
          }
          result.booleanValue_.addAll(other.booleanValue_);
        }
        if (!other.stringValue_.isEmpty()) {
          if (result.stringValue_.isEmpty()) {
            result.stringValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.STRING>();
          }
          result.stringValue_.addAll(other.stringValue_);
        }
        if (other.hasRawValue()) {
          setRawValue(other.getRawValue());
        }
        if (!other.complexValue_.isEmpty()) {
          if (result.complexValue_.isEmpty()) {
            result.complexValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.CMPLX>();
          }
          result.complexValue_.addAll(other.complexValue_);
        }
        if (!other.rexpValue_.isEmpty()) {
          if (result.rexpValue_.isEmpty()) {
            result.rexpValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
          }
          result.rexpValue_.addAll(other.rexpValue_);
        }
        if (!other.attrName_.isEmpty()) {
          if (result.attrName_.isEmpty()) {
            result.attrName_ = new java.util.ArrayList<java.lang.String>();
          }
          result.attrName_.addAll(other.attrName_);
        }
        if (!other.attrValue_.isEmpty()) {
          if (result.attrValue_.isEmpty()) {
            result.attrValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
          }
          result.attrValue_.addAll(other.attrValue_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.godhuli.rhipe.REXPProtos.REXP.RClass value = org.godhuli.rhipe.REXPProtos.REXP.RClass.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setRclass(value);
              }
              break;
            }
            case 17: {
              addRealValue(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addRealValue(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              addIntValue(input.readSInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addIntValue(input.readSInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value = org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                addBooleanValue(value);
              }
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value = org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  addBooleanValue(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
            case 42: {
              org.godhuli.rhipe.REXPProtos.STRING.Builder subBuilder = org.godhuli.rhipe.REXPProtos.STRING.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStringValue(subBuilder.buildPartial());
              break;
            }
            case 50: {
              setRawValue(input.readBytes());
              break;
            }
            case 58: {
              org.godhuli.rhipe.REXPProtos.CMPLX.Builder subBuilder = org.godhuli.rhipe.REXPProtos.CMPLX.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addComplexValue(subBuilder.buildPartial());
              break;
            }
            case 66: {
              org.godhuli.rhipe.REXPProtos.REXP.Builder subBuilder = org.godhuli.rhipe.REXPProtos.REXP.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addRexpValue(subBuilder.buildPartial());
              break;
            }
            case 90: {
              addAttrName(input.readString());
              break;
            }
            case 98: {
              org.godhuli.rhipe.REXPProtos.REXP.Builder subBuilder = org.godhuli.rhipe.REXPProtos.REXP.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAttrValue(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .REXP.RClass rclass = 1;
      public boolean hasRclass() {
        return result.hasRclass();
      }
      public org.godhuli.rhipe.REXPProtos.REXP.RClass getRclass() {
        return result.getRclass();
      }
      public Builder setRclass(org.godhuli.rhipe.REXPProtos.REXP.RClass value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRclass = true;
        result.rclass_ = value;
        return this;
      }
      public Builder clearRclass() {
        result.hasRclass = false;
        result.rclass_ = org.godhuli.rhipe.REXPProtos.REXP.RClass.STRING;
        return this;
      }
      
      // repeated double realValue = 2 [packed = true];
      public java.util.List<java.lang.Double> getRealValueList() {
        return java.util.Collections.unmodifiableList(result.realValue_);
      }
      public int getRealValueCount() {
        return result.getRealValueCount();
      }
      public double getRealValue(int index) {
        return result.getRealValue(index);
      }
      public Builder setRealValue(int index, double value) {
        result.realValue_.set(index, value);
        return this;
      }
      public Builder addRealValue(double value) {
        if (result.realValue_.isEmpty()) {
          result.realValue_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.realValue_.add(value);
        return this;
      }
      public Builder addAllRealValue(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.realValue_.isEmpty()) {
          result.realValue_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.realValue_);
        return this;
      }
      public Builder clearRealValue() {
        result.realValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated sint32 intValue = 3 [packed = true];
      public java.util.List<java.lang.Integer> getIntValueList() {
        return java.util.Collections.unmodifiableList(result.intValue_);
      }
      public int getIntValueCount() {
        return result.getIntValueCount();
      }
      public int getIntValue(int index) {
        return result.getIntValue(index);
      }
      public Builder setIntValue(int index, int value) {
        result.intValue_.set(index, value);
        return this;
      }
      public Builder addIntValue(int value) {
        if (result.intValue_.isEmpty()) {
          result.intValue_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.intValue_.add(value);
        return this;
      }
      public Builder addAllIntValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.intValue_.isEmpty()) {
          result.intValue_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.intValue_);
        return this;
      }
      public Builder clearIntValue() {
        result.intValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .REXP.RBOOLEAN booleanValue = 4;
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> getBooleanValueList() {
        return java.util.Collections.unmodifiableList(result.booleanValue_);
      }
      public int getBooleanValueCount() {
        return result.getBooleanValueCount();
      }
      public org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN getBooleanValue(int index) {
        return result.getBooleanValue(index);
      }
      public Builder setBooleanValue(int index, org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.booleanValue_.set(index, value);
        return this;
      }
      public Builder addBooleanValue(org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.booleanValue_.isEmpty()) {
          result.booleanValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN>();
        }
        result.booleanValue_.add(value);
        return this;
      }
      public Builder addAllBooleanValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN> values) {
        if (result.booleanValue_.isEmpty()) {
          result.booleanValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP.RBOOLEAN>();
        }
        super.addAll(values, result.booleanValue_);
        return this;
      }
      public Builder clearBooleanValue() {
        result.booleanValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .STRING stringValue = 5;
      public java.util.List<org.godhuli.rhipe.REXPProtos.STRING> getStringValueList() {
        return java.util.Collections.unmodifiableList(result.stringValue_);
      }
      public int getStringValueCount() {
        return result.getStringValueCount();
      }
      public org.godhuli.rhipe.REXPProtos.STRING getStringValue(int index) {
        return result.getStringValue(index);
      }
      public Builder setStringValue(int index, org.godhuli.rhipe.REXPProtos.STRING value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.stringValue_.set(index, value);
        return this;
      }
      public Builder setStringValue(int index, org.godhuli.rhipe.REXPProtos.STRING.Builder builderForValue) {
        result.stringValue_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStringValue(org.godhuli.rhipe.REXPProtos.STRING value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.stringValue_.isEmpty()) {
          result.stringValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.STRING>();
        }
        result.stringValue_.add(value);
        return this;
      }
      public Builder addStringValue(org.godhuli.rhipe.REXPProtos.STRING.Builder builderForValue) {
        if (result.stringValue_.isEmpty()) {
          result.stringValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.STRING>();
        }
        result.stringValue_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStringValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.STRING> values) {
        if (result.stringValue_.isEmpty()) {
          result.stringValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.STRING>();
        }
        super.addAll(values, result.stringValue_);
        return this;
      }
      public Builder clearStringValue() {
        result.stringValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional bytes rawValue = 6;
      public boolean hasRawValue() {
        return result.hasRawValue();
      }
      public com.google.protobuf.ByteString getRawValue() {
        return result.getRawValue();
      }
      public Builder setRawValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRawValue = true;
        result.rawValue_ = value;
        return this;
      }
      public Builder clearRawValue() {
        result.hasRawValue = false;
        result.rawValue_ = getDefaultInstance().getRawValue();
        return this;
      }
      
      // repeated .CMPLX complexValue = 7;
      public java.util.List<org.godhuli.rhipe.REXPProtos.CMPLX> getComplexValueList() {
        return java.util.Collections.unmodifiableList(result.complexValue_);
      }
      public int getComplexValueCount() {
        return result.getComplexValueCount();
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX getComplexValue(int index) {
        return result.getComplexValue(index);
      }
      public Builder setComplexValue(int index, org.godhuli.rhipe.REXPProtos.CMPLX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.complexValue_.set(index, value);
        return this;
      }
      public Builder setComplexValue(int index, org.godhuli.rhipe.REXPProtos.CMPLX.Builder builderForValue) {
        result.complexValue_.set(index, builderForValue.build());
        return this;
      }
      public Builder addComplexValue(org.godhuli.rhipe.REXPProtos.CMPLX value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.complexValue_.isEmpty()) {
          result.complexValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.CMPLX>();
        }
        result.complexValue_.add(value);
        return this;
      }
      public Builder addComplexValue(org.godhuli.rhipe.REXPProtos.CMPLX.Builder builderForValue) {
        if (result.complexValue_.isEmpty()) {
          result.complexValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.CMPLX>();
        }
        result.complexValue_.add(builderForValue.build());
        return this;
      }
      public Builder addAllComplexValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.CMPLX> values) {
        if (result.complexValue_.isEmpty()) {
          result.complexValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.CMPLX>();
        }
        super.addAll(values, result.complexValue_);
        return this;
      }
      public Builder clearComplexValue() {
        result.complexValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .REXP rexpValue = 8;
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getRexpValueList() {
        return java.util.Collections.unmodifiableList(result.rexpValue_);
      }
      public int getRexpValueCount() {
        return result.getRexpValueCount();
      }
      public org.godhuli.rhipe.REXPProtos.REXP getRexpValue(int index) {
        return result.getRexpValue(index);
      }
      public Builder setRexpValue(int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.rexpValue_.set(index, value);
        return this;
      }
      public Builder setRexpValue(int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        result.rexpValue_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRexpValue(org.godhuli.rhipe.REXPProtos.REXP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.rexpValue_.isEmpty()) {
          result.rexpValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        result.rexpValue_.add(value);
        return this;
      }
      public Builder addRexpValue(org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (result.rexpValue_.isEmpty()) {
          result.rexpValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        result.rexpValue_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRexpValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP> values) {
        if (result.rexpValue_.isEmpty()) {
          result.rexpValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        super.addAll(values, result.rexpValue_);
        return this;
      }
      public Builder clearRexpValue() {
        result.rexpValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string attrName = 11;
      public java.util.List<java.lang.String> getAttrNameList() {
        return java.util.Collections.unmodifiableList(result.attrName_);
      }
      public int getAttrNameCount() {
        return result.getAttrNameCount();
      }
      public java.lang.String getAttrName(int index) {
        return result.getAttrName(index);
      }
      public Builder setAttrName(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.attrName_.set(index, value);
        return this;
      }
      public Builder addAttrName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.attrName_.isEmpty()) {
          result.attrName_ = new java.util.ArrayList<java.lang.String>();
        }
        result.attrName_.add(value);
        return this;
      }
      public Builder addAllAttrName(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.attrName_.isEmpty()) {
          result.attrName_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.attrName_);
        return this;
      }
      public Builder clearAttrName() {
        result.attrName_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .REXP attrValue = 12;
      public java.util.List<org.godhuli.rhipe.REXPProtos.REXP> getAttrValueList() {
        return java.util.Collections.unmodifiableList(result.attrValue_);
      }
      public int getAttrValueCount() {
        return result.getAttrValueCount();
      }
      public org.godhuli.rhipe.REXPProtos.REXP getAttrValue(int index) {
        return result.getAttrValue(index);
      }
      public Builder setAttrValue(int index, org.godhuli.rhipe.REXPProtos.REXP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.attrValue_.set(index, value);
        return this;
      }
      public Builder setAttrValue(int index, org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        result.attrValue_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAttrValue(org.godhuli.rhipe.REXPProtos.REXP value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.attrValue_.isEmpty()) {
          result.attrValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        result.attrValue_.add(value);
        return this;
      }
      public Builder addAttrValue(org.godhuli.rhipe.REXPProtos.REXP.Builder builderForValue) {
        if (result.attrValue_.isEmpty()) {
          result.attrValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        result.attrValue_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAttrValue(
          java.lang.Iterable<? extends org.godhuli.rhipe.REXPProtos.REXP> values) {
        if (result.attrValue_.isEmpty()) {
          result.attrValue_ = new java.util.ArrayList<org.godhuli.rhipe.REXPProtos.REXP>();
        }
        super.addAll(values, result.attrValue_);
        return this;
      }
      public Builder clearAttrValue() {
        result.attrValue_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:REXP)
    }
    
    static {
      defaultInstance = new REXP(true);
      org.godhuli.rhipe.REXPProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:REXP)
  }
  
  public static final class STRING extends
      com.google.protobuf.GeneratedMessage {
    // Use STRING.newBuilder() to construct.
    private STRING() {
      initFields();
    }
    private STRING(boolean noInit) {}
    
    private static final STRING defaultInstance;
    public static STRING getDefaultInstance() {
      return defaultInstance;
    }
    
    public STRING getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_STRING_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_STRING_fieldAccessorTable;
    }
    
    // optional string strval = 1;
    public static final int STRVAL_FIELD_NUMBER = 1;
    private boolean hasStrval;
    private java.lang.String strval_ = "";
    public boolean hasStrval() { return hasStrval; }
    public java.lang.String getStrval() { return strval_; }
    
    // optional bool isNA = 2 [default = false];
    public static final int ISNA_FIELD_NUMBER = 2;
    private boolean hasIsNA;
    private boolean isNA_ = false;
    public boolean hasIsNA() { return hasIsNA; }
    public boolean getIsNA() { return isNA_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStrval()) {
        output.writeString(1, getStrval());
      }
      if (hasIsNA()) {
        output.writeBool(2, getIsNA());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStrval()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getStrval());
      }
      if (hasIsNA()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, getIsNA());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.STRING parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.STRING prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.godhuli.rhipe.REXPProtos.STRING result;
      
      // Construct using org.godhuli.rhipe.REXPProtos.STRING.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.godhuli.rhipe.REXPProtos.STRING();
        return builder;
      }
      
      protected org.godhuli.rhipe.REXPProtos.STRING internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.godhuli.rhipe.REXPProtos.STRING();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.STRING.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.STRING getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.godhuli.rhipe.REXPProtos.STRING build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.godhuli.rhipe.REXPProtos.STRING buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.godhuli.rhipe.REXPProtos.STRING buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.godhuli.rhipe.REXPProtos.STRING returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.STRING) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.STRING)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.STRING other) {
        if (other == org.godhuli.rhipe.REXPProtos.STRING.getDefaultInstance()) return this;
        if (other.hasStrval()) {
          setStrval(other.getStrval());
        }
        if (other.hasIsNA()) {
          setIsNA(other.getIsNA());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setStrval(input.readString());
              break;
            }
            case 16: {
              setIsNA(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // optional string strval = 1;
      public boolean hasStrval() {
        return result.hasStrval();
      }
      public java.lang.String getStrval() {
        return result.getStrval();
      }
      public Builder setStrval(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStrval = true;
        result.strval_ = value;
        return this;
      }
      public Builder clearStrval() {
        result.hasStrval = false;
        result.strval_ = getDefaultInstance().getStrval();
        return this;
      }
      
      // optional bool isNA = 2 [default = false];
      public boolean hasIsNA() {
        return result.hasIsNA();
      }
      public boolean getIsNA() {
        return result.getIsNA();
      }
      public Builder setIsNA(boolean value) {
        result.hasIsNA = true;
        result.isNA_ = value;
        return this;
      }
      public Builder clearIsNA() {
        result.hasIsNA = false;
        result.isNA_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:STRING)
    }
    
    static {
      defaultInstance = new STRING(true);
      org.godhuli.rhipe.REXPProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:STRING)
  }
  
  public static final class CMPLX extends
      com.google.protobuf.GeneratedMessage {
    // Use CMPLX.newBuilder() to construct.
    private CMPLX() {
      initFields();
    }
    private CMPLX(boolean noInit) {}
    
    private static final CMPLX defaultInstance;
    public static CMPLX getDefaultInstance() {
      return defaultInstance;
    }
    
    public CMPLX getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.godhuli.rhipe.REXPProtos.internal_static_CMPLX_fieldAccessorTable;
    }
    
    // optional double real = 1 [default = 0];
    public static final int REAL_FIELD_NUMBER = 1;
    private boolean hasReal;
    private double real_ = 0D;
    public boolean hasReal() { return hasReal; }
    public double getReal() { return real_; }
    
    // required double imag = 2;
    public static final int IMAG_FIELD_NUMBER = 2;
    private boolean hasImag;
    private double imag_ = 0D;
    public boolean hasImag() { return hasImag; }
    public double getImag() { return imag_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasImag) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasReal()) {
        output.writeDouble(1, getReal());
      }
      if (hasImag()) {
        output.writeDouble(2, getImag());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasReal()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, getReal());
      }
      if (hasImag()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getImag());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.godhuli.rhipe.REXPProtos.CMPLX parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.godhuli.rhipe.REXPProtos.CMPLX prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.godhuli.rhipe.REXPProtos.CMPLX result;
      
      // Construct using org.godhuli.rhipe.REXPProtos.CMPLX.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.godhuli.rhipe.REXPProtos.CMPLX();
        return builder;
      }
      
      protected org.godhuli.rhipe.REXPProtos.CMPLX internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.godhuli.rhipe.REXPProtos.CMPLX();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.godhuli.rhipe.REXPProtos.CMPLX.getDescriptor();
      }
      
      public org.godhuli.rhipe.REXPProtos.CMPLX getDefaultInstanceForType() {
        return org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.godhuli.rhipe.REXPProtos.CMPLX build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.godhuli.rhipe.REXPProtos.CMPLX buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.godhuli.rhipe.REXPProtos.CMPLX buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.godhuli.rhipe.REXPProtos.CMPLX returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.godhuli.rhipe.REXPProtos.CMPLX) {
          return mergeFrom((org.godhuli.rhipe.REXPProtos.CMPLX)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.godhuli.rhipe.REXPProtos.CMPLX other) {
        if (other == org.godhuli.rhipe.REXPProtos.CMPLX.getDefaultInstance()) return this;
        if (other.hasReal()) {
          setReal(other.getReal());
        }
        if (other.hasImag()) {
          setImag(other.getImag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              setReal(input.readDouble());
              break;
            }
            case 17: {
              setImag(input.readDouble());
              break;
            }
          }
        }
      }
      
      
      // optional double real = 1 [default = 0];
      public boolean hasReal() {
        return result.hasReal();
      }
      public double getReal() {
        return result.getReal();
      }
      public Builder setReal(double value) {
        result.hasReal = true;
        result.real_ = value;
        return this;
      }
      public Builder clearReal() {
        result.hasReal = false;
        result.real_ = 0D;
        return this;
      }
      
      // required double imag = 2;
      public boolean hasImag() {
        return result.hasImag();
      }
      public double getImag() {
        return result.getImag();
      }
      public Builder setImag(double value) {
        result.hasImag = true;
        result.imag_ = value;
        return this;
      }
      public Builder clearImag() {
        result.hasImag = false;
        result.imag_ = 0D;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CMPLX)
    }
    
    static {
      defaultInstance = new CMPLX(true);
      org.godhuli.rhipe.REXPProtos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CMPLX)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_REXP_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_REXP_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_STRING_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_STRING_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CMPLX_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMPLX_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nrexp.proto\"\225\003\n\004REXP\022\034\n\006rclass\030\001 \002(\0162\014." +
      "REXP.RClass\022\025\n\trealValue\030\002 \003(\001B\002\020\001\022\024\n\010in" +
      "tValue\030\003 \003(\021B\002\020\001\022$\n\014booleanValue\030\004 \003(\0162\016" +
      ".REXP.RBOOLEAN\022\034\n\013stringValue\030\005 \003(\0132\007.ST" +
      "RING\022\020\n\010rawValue\030\006 \001(\014\022\034\n\014complexValue\030\007" +
      " \003(\0132\006.CMPLX\022\030\n\trexpValue\030\010 \003(\0132\005.REXP\022\020" +
      "\n\010attrName\030\013 \003(\t\022\030\n\tattrValue\030\014 \003(\0132\005.RE" +
      "XP\"f\n\006RClass\022\n\n\006STRING\020\000\022\007\n\003RAW\020\001\022\010\n\004REA" +
      "L\020\002\022\013\n\007COMPLEX\020\003\022\013\n\007INTEGER\020\004\022\010\n\004LIST\020\005\022" +
      "\013\n\007LOGICAL\020\006\022\014\n\010NULLTYPE\020\007\" \n\010RBOOLEAN\022\005",
      "\n\001F\020\000\022\005\n\001T\020\001\022\006\n\002NA\020\002\"-\n\006STRING\022\016\n\006strval" +
      "\030\001 \001(\t\022\023\n\004isNA\030\002 \001(\010:\005false\"&\n\005CMPLX\022\017\n\004" +
      "real\030\001 \001(\001:\0010\022\014\n\004imag\030\002 \002(\001B\037\n\021org.godhu" +
      "li.rhipeB\nREXPProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_REXP_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_REXP_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_REXP_descriptor,
              new java.lang.String[] { "Rclass", "RealValue", "IntValue", "BooleanValue", "StringValue", "RawValue", "ComplexValue", "RexpValue", "AttrName", "AttrValue", },
              org.godhuli.rhipe.REXPProtos.REXP.class,
              org.godhuli.rhipe.REXPProtos.REXP.Builder.class);
          internal_static_STRING_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_STRING_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_STRING_descriptor,
              new java.lang.String[] { "Strval", "IsNA", },
              org.godhuli.rhipe.REXPProtos.STRING.class,
              org.godhuli.rhipe.REXPProtos.STRING.Builder.class);
          internal_static_CMPLX_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_CMPLX_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CMPLX_descriptor,
              new java.lang.String[] { "Real", "Imag", },
              org.godhuli.rhipe.REXPProtos.CMPLX.class,
              org.godhuli.rhipe.REXPProtos.CMPLX.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
